// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// logLik_cpp
double logLik_cpp(const arma::vec& psi, const arma::mat& p, const arma::mat& Y, const arma::mat& missing, const arma::uvec& non_det);
RcppExport SEXP _MiLinOccu_logLik_cpp(SEXP psiSEXP, SEXP pSEXP, SEXP YSEXP, SEXP missingSEXP, SEXP non_detSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type p(pSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type missing(missingSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type non_det(non_detSEXP);
    rcpp_result_gen = Rcpp::wrap(logLik_cpp(psi, p, Y, missing, non_det));
    return rcpp_result_gen;
END_RCPP
}
// getpsi
arma::vec getpsi(const List& Designs, const List& betas, const arma::vec& alpha, int n_site, int G);
RcppExport SEXP _MiLinOccu_getpsi(SEXP DesignsSEXP, SEXP betasSEXP, SEXP alphaSEXP, SEXP n_siteSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type Designs(DesignsSEXP);
    Rcpp::traits::input_parameter< const List& >::type betas(betasSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type n_site(n_siteSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(getpsi(Designs, betas, alpha, n_site, G));
    return rcpp_result_gen;
END_RCPP
}
// getp
arma::mat getp(const List& Designs_det, const List& betas_det, const arma::vec& alpha, int n_period, int n_site, int G);
RcppExport SEXP _MiLinOccu_getp(SEXP Designs_detSEXP, SEXP betas_detSEXP, SEXP alphaSEXP, SEXP n_periodSEXP, SEXP n_siteSEXP, SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List& >::type Designs_det(Designs_detSEXP);
    Rcpp::traits::input_parameter< const List& >::type betas_det(betas_detSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type n_period(n_periodSEXP);
    Rcpp::traits::input_parameter< int >::type n_site(n_siteSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(getp(Designs_det, betas_det, alpha, n_period, n_site, G));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MiLinOccu_logLik_cpp", (DL_FUNC) &_MiLinOccu_logLik_cpp, 5},
    {"_MiLinOccu_getpsi", (DL_FUNC) &_MiLinOccu_getpsi, 5},
    {"_MiLinOccu_getp", (DL_FUNC) &_MiLinOccu_getp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_MiLinOccu(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
